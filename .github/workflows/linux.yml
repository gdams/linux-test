name: Check Linux Packages
on:
  push:
    paths:
      - 'linux/**'
      - '.github/workflows/linux.yml'
  pull_request:
    branches: [ master ]
    paths:
      - 'linux/**'
      - '.github/workflows/linux.yml'

# Cancel existing runs if user makes another push.
concurrency:
  group: "${{ github.ref }}"
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

permissions:
  contents: read

jobs:
  check-ca-certificates:
    name: "Check ca-certificates"
    if: github.event_name == 'pull_request' || github.repository_owner != 'adoptium'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./linux

    steps:
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

      - uses: actions/setup-java@5ffc13f4174014e2d4d4572b3d74c3fa61aeb2c2 # v3.8.0
        with:
          java-version: '17'
          java-package: jdk
          architecture: x64
          distribution: 'temurin'

      - name: Build
        run: |
          export _JAVA_OPTIONS="-Xmx4G"
          ./gradlew --parallel :ca-certificates:check --stacktrace

      - uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        if: always() # always run even if the previous step fails
        with:
          name: test-results
          path: '**/build/test-results/**/TEST-*.xml' 

  check-packages:
    name: "Check ${{ matrix.image_type }} on ${{ matrix.product.name }} ${{ matrix.product.version }} ${{ matrix.distro }}"
    if: github.event_name == 'pull_request' || github.repository_owner != 'adoptium'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./linux
    strategy:
      fail-fast: false
      matrix:
        image_type: [JDK]
        distro: [Debian, RedHat]
        product: [
          { name: microsoft, version: 11, arch: x86_64 },
          { name: microsoft, version: 17, arch: x86_64 }
        ]

    steps:
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

      - uses: actions/setup-java@5ffc13f4174014e2d4d4572b3d74c3fa61aeb2c2 # v3.8.0
        with:
          java-version: '17'
          java-package: jdk
          architecture: x64
          distribution: 'temurin'

      - name: Build # only simulate in Jenkins when select ARCH="all"
        run: |
          export _JAVA_OPTIONS="-Xmx4G"
          export DOCKER_BUILDKIT=1
          ./gradlew --parallel package$( echo "${{ matrix.image_type }}" | tr [DKRE] [dkre] )${{ matrix.distro }} check${{ matrix.image_type }}${{ matrix.distro }} -PPRODUCT=${{ matrix.product.name }} -PPRODUCT_VERSION=${{ matrix.product.version }} -PARCH=${{ matrix.product.arch }} --stacktrace

      - name: Relocate test results
        if: always() # always run even if the previous step fails
        run: |
          mkdir ${{ matrix.product.version }}
          mv $( echo "${{ matrix.image_type }}" | tr [:upper:] [:lower:] ) ${{ matrix.product.version }}

      - uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        if: always() # always run even if the previous step fails
        with:
          name: test-results
          path: '**/build/test-results/**/TEST-*.xml'

  # Ensures we don't accept a Gradle Wrapper update that has been tampered with.
  validation:
    name: "Validate Gradle Wrapper"
    if: github.event_name == 'pull_request' || github.repository_owner != 'adoptium'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      - uses: gradle/wrapper-validation-action@55e685c48d84285a5b0418cd094606e199cca3b6 # v1.0.5
